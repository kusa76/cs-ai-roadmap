name: CI

on:
  push:            # run on any branch push
    branches: ["**"]
  pull_request:    # PRs too
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Always runs so the workflow never ends with "no jobs were run"
  quickcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          echo "CI for ${{ github.repository }} @ ${{ github.sha }}"
          echo "Branch: ${{ github.ref }}"
          echo "Changed files:"; git diff --name-only HEAD~1 || true

  # Backend (FastAPI) — only if pyapi exists
  pyapi:
    if: ${{ hashFiles('services/pyapi/requirements.txt') != '' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: services/pyapi
    env:
      DATABASE_URL: sqlite+aiosqlite:///:memory:
      PYTHONUNBUFFERED: "1"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      - name: Install deps
        run: python -m pip install --upgrade pip && pip install -r requirements.txt
      - name: Import & version checks
        run: |
          python - <<'PY'
          import fastapi, sqlalchemy
          print("fastapi", fastapi.__version__)
          print("sqlalchemy", sqlalchemy.__version__)
          PY
      - name: Build container
        run: docker build -t pyapi:ci .

  # Frontend (web) — only if web exists
  web:
    if: ${{ hashFiles('web/package.json') != '' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'web/package-lock.json'
      - name: Install
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm install; fi
      - name: Build
        run: npm run -s build

  # Optional tsapi — only if present
  tsapi:
    if: ${{ hashFiles('services/tsapi/package.json') != '' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: services/tsapi
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'services/tsapi/package-lock.json'
      - name: Install
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm install; fi
      - name: Test
        run: |
          npm test --silent || echo "No tests; skipping"
      - name: Build
        run: npm run -s build
      - name: Build container
        run: docker build -t tsapi:ci .

